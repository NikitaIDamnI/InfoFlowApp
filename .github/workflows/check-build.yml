
name: Code quality check and Build Release
run-name: Check code quality with linter and build release APK
on: [push]

jobs:
    Linters:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

            - name: Set up JDK
              uses: actions/setup-java@v4
              with:
                  distribution: 'temurin'
                  java-version: 17

            - uses: gradle/actions/setup-gradle@v4
              with:
                  cache-disabled: true

            - name: Detekt
              shell: bash
              run: ./gradlew detekt

            - name: Publish Checkstyle Report
              uses: Juuxel/publish-checkstyle-report@v1.0.0
              with:
                  # The glob paths to all report XML files
                  reports: '**/build/**/detekt.xml'

    BuildRelease:
        runs-on: ubuntu-latest
        needs: Linters
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up JDK
              uses: actions/setup-java@v3
              with:
                  java-version: '17'

            - name: Set up Gradle
              uses: gradle/actions/setup-gradle@v2

            - name: Decrypt Keystore
              env:
                  RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
                  RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
                  RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
              run: |
                  echo "Decrypting keystore file..."
                  mkdir -p ~/.android
                  echo "${{ secrets.RELEASE_KEYSTORE }}" | base64 -d > ~/.android/release.keystore

            - name: Build Release APK
              run: ./gradlew assembleRelease
              env:
                  RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
                  RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
                  RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}

            - name: Upload APK Artifact
              uses: actions/upload-artifact@v3
              with:
                  name: release-apk
                  path: app/build/outputs/apk/release/*.apk
